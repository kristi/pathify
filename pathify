#
# Helper script to manage PATH and environment variables
#
# Source this script in your ~/.bashrc file.
# E.g. add this line to ~/.bashrc (change path to point to this script)
#     source ~/pathify
#
# Add environment activation scripts (or symlinks) in $PATHIFY_HOME

PATHIFY_HOME=$HOME/.pathify
[[ -e "$PATHIFY_HOME" ]] || mkdir -p "$PATHIFY_HOME"
# Clear history
unset PATHIFY_HISTORY

function pathify {
    local env="$1"
    local activation_script="$PATHIFY_HOME/$env"
    [[ -z "$PATHIFY_HOME" ]] && echo "pathify: Error: PATHIFY_HOME not set" && return 1
    [[ -z "$env" ]] && echo "pathify: Error: No environment given" && return 1
    if [[ -e "$activation_script" ]] 
    then
        echo "pathify: Loading $env"
        source "$activation_script"

        if [[ "$?" == 0 ]]
        then
            PATHIFY_HISTORY="$env $PATHIFY_HISTORY"
        fi
    else
        echo "pathify: Error: Couldn't find activation script for '$env' at '$activation_script'"
    fi
}

function unpathify {
    local env
    if [[ -z "$1" ]]
    then
        env="${PATHIFY_HISTORY%% *}"
    else
        env="$1"
    fi
    [[ -z "$env" ]] && echo "pathify: Error: no environment to unload" && return 1

    local deactivation_command="deactivate_$env"
    echo "pathify: Unloading $env"
    "$deactivation_command"
    if [[ "$?" == 0 ]]
    then
        PATHIFY_HISTORY="${PATHIFY_HISTORY/$env /}"
    fi
}

function pathify-edit {
    local env="$1"
    ${EDITOR:-vim} $PATHIFY_HOME/$env
}

# tab completion
if [ -n "$BASH" ] ; then
    _pathify_complete_envs()
    {
        local cur="${COMP_WORDS[COMP_CWORD]}"
        COMPREPLY=( $(compgen -W "`ls $PATHIFY_HOME | grep -x -v -E 'pathify|README.md'`" -- ${cur}) )
    }

    complete -o default -o nospace -F _pathify_complete_envs pathify
    #complete -o default -o nospace -F _virtualenvs rmvirtualenv

elif [ -n "$ZSH" ] ; then
    _pathify_complete_envs()
    {
        local cur="${COMP_WORDS[COMP_CWORD]}"
        reply=( $(cd $PATHIFY_HOME && ls -d ${1}* | grep -x -v -E 'pathify|README.md') )
    }

    compctl -K _pathify_complete_envs pathify
fi

# vim: ft=zsh ts=4 sw=4 et:
