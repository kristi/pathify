# call this script with bash or zsh
#     bash test-pathify
#     zsh test-pathify
#
# You should see the "Yay! Tests passed!" at the end or else something 
# went wrong :(

unset CFLAGS
unset FOO_ENV
unset PATHIFY_HISTORY
unset PATHIFY_LAST_ENV

# with -e, this script will exit if any command returns non-zero
set -e
source pathify

echo "Test load, unload"
{
    pathify load foo

    [[ -n "$FOO_ENV" ]]
    [[ -n "$CFLAGS" ]]

    pathify unload foo

    [[ -z "$FOO_ENV" ]] || echo "FOO_ENV=$FOO_ENV"
    [[ -z "$CFLAGS" ]] || echo "CFLAGS=$CFLAGS"
}

echo "Test clean unloading"
{
    EDITOR="true"
    rm -f test_env
    printenv > vars_before
    pathify new test_env
    pathify load test_env
    pathify unload test_env
    unset PATHIFY_LAST_ENV
    printenv > vars_after
    diff -q vars_before vars_after

    rm -f test_env
    rm -f vars_before
    rm -f vars_after
}

echo "Test environment parameter verification"
{
    ! (pathify load nonexistant)
    ! (pathify load "")
    ! (pathify load " ")
    ! (pathify unload nonexistant)
    ! (pathify unload foo)
    ! (pathify edit nonexistant )
    ! (pathify new foo)
    ! (pathify new template)
    ! (pathify new " invalid name")
    ! (pathify new edit)
    ! (pathify new load)
    ! (pathify new unload)
    ! (pathify new template)
}

echo "Test history saving"
{
    pathify load foo
    pathify unload foo
    pathify load

    [[ -n "$FOO_ENV" ]]
    [[ -n "$CFLAGS" ]]

    pathify unload 

    [[ -z "$FOO_ENV" ]]
    [[ -z "$CFLAGS" ]]

    ! (pathify unload)

    pathify 

    [[ -n "$FOO_ENV" ]]
    [[ -n "$CFLAGS" ]]

    pathify example

    [[ -n "$FOO_ENV" ]]
    [[ -n "$CFLAGS" ]]
    [[ -n "$EXAMPLE_ENV" ]]
    echo "$PATH" | grep -q "/sbin:"

    unpathify

    [[ -n "$FOO_ENV" ]]
    [[ -n "$CFLAGS" ]]
    [[ -z "$EXAMPLE_ENV" ]]
    ! (echo "$PATH" | grep -q "/sbin:")

    unpathify

    [[ -z "$FOO_ENV" ]]
    [[ -z "$CFLAGS" ]]
    [[ -z "$EXAMPLE_ENV" ]]
    ! (echo "$PATH" | grep -q "/sbin:")
}

echo "Test shortcuts"
{
    pathify load foo
    pathify unload foo
    pathify

    [[ -n "$FOO_ENV" ]]
    [[ -n "$CFLAGS" ]]

    unpathify

    [[ -z "$FOO_ENV" ]]
    [[ -z "$CFLAGS" ]]
}

echo ""
echo "Yay! Tests passed!"
# vim:ft=zsh sw=4 ts=4 sts=4 et
