# This file must be sourced from bash
# You cannot run it directly
#
# Environment generated from pathify template
#
# <Add your desciption here>

deactivate_@env@ () {
    # reset old environment variables
    if [ -n "$_OLD_@ENV@_PATH" ] ; then
        PATH="$_OLD_@ENV@_PATH"
        export PATH
        unset _OLD_@ENV@_PATH
    fi

    # This should detect bash and zsh, which have a hash command that must
    # be called to get it to forget past commands.  Without forgetting
    # past commands the $PATH changes we made may not be respected
    if [ -n "$BASH" -o -n "$ZSH_VERSION" ] ; then
        hash -r
    fi

    if [ -n "$_OLD_@ENV@_PS1" ] ; then
        PS1="$_OLD_@ENV@_PS1"
        export PS1
        unset _OLD_@ENV@_PS1
    fi

    unset @ENV@_ENV
    if [ ! "$1" = "nondestructive" ] ; then
    # Self destruct!
        unset -f deactivate_@env@
    fi
}

# unset irrelavent variables
deactivate_@env@ nondestructive

@ENV@_ENV="@env@"
export @ENV@_ENV

_OLD_@ENV@_PATH="$PATH"
PATH="/sbin:$PATH"
export PATH

if [ -z "$@ENV@_ENV_DISABLE_PROMPT" ] &&
   [ -z "$PATHIFY_DISABLE_PROMPT" ] ; then
    _OLD_@ENV@_PS1="$PS1"
    # Add env name before first non-whitespace PS1 char
    PS1=$(echo "$PS1" | sed -e '0,/\S/s//[@env@] &/')
    export PS1
fi

# This should detect bash and zsh, which have a hash command that must
# be called to get it to forget past commands.  Without forgetting
# past commands the $PATH changes we made may not be respected
if [ -n "$BASH" -o -n "$ZSH_VERSION" ] ; then
    hash -r
fi
